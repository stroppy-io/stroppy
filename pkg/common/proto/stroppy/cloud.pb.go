// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: stroppy/cloud.proto

package proto

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Status represents the status of a stroppy run or step run.
type Status int32

const (
	// * Run or step is idle
	Status_STATUS_IDLE Status = 0
	// * Run or step is running
	Status_STATUS_RUNNING Status = 1
	// * Run or step has completed successfully
	Status_STATUS_COMPLETED Status = 2
	// * Run or step has failed
	Status_STATUS_FAILED Status = 3
	// * Run or step has been cancelled
	Status_STATUS_CANCELLED Status = 4
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "STATUS_IDLE",
		1: "STATUS_RUNNING",
		2: "STATUS_COMPLETED",
		3: "STATUS_FAILED",
		4: "STATUS_CANCELLED",
	}
	Status_value = map[string]int32{
		"STATUS_IDLE":      0,
		"STATUS_RUNNING":   1,
		"STATUS_COMPLETED": 2,
		"STATUS_FAILED":    3,
		"STATUS_CANCELLED": 4,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_stroppy_cloud_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_stroppy_cloud_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_stroppy_cloud_proto_rawDescGZIP(), []int{0}
}

type StroppyStepRun struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// * Unique identifier for the step run generated by stroppy-cli
	Id *Ulid `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// * Unique identifier for the parent stroppy run generated by stroppy-cli
	StroppyRunId *Ulid `protobuf:"bytes,2,opt,name=stroppy_run_id,json=stroppyRunId,proto3" json:"stroppy_run_id,omitempty"`
	// * Context for the step run
	Context *StepContext `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
	// * Status of the step run
	Status        Status `protobuf:"varint,4,opt,name=status,proto3,enum=stroppy.Status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StroppyStepRun) Reset() {
	*x = StroppyStepRun{}
	mi := &file_stroppy_cloud_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StroppyStepRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StroppyStepRun) ProtoMessage() {}

func (x *StroppyStepRun) ProtoReflect() protoreflect.Message {
	mi := &file_stroppy_cloud_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StroppyStepRun.ProtoReflect.Descriptor instead.
func (*StroppyStepRun) Descriptor() ([]byte, []int) {
	return file_stroppy_cloud_proto_rawDescGZIP(), []int{0}
}

func (x *StroppyStepRun) GetId() *Ulid {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *StroppyStepRun) GetStroppyRunId() *Ulid {
	if x != nil {
		return x.StroppyRunId
	}
	return nil
}

func (x *StroppyStepRun) GetContext() *StepContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *StroppyStepRun) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_IDLE
}

// *
// StroppyRun represents a benchmark run on the stroppy cli.
type StroppyRun struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// * Unique identifier for the run generated by stroppy-cli
	Id *Ulid `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// * Status of the run
	Status Status `protobuf:"varint,2,opt,name=status,proto3,enum=stroppy.Status" json:"status,omitempty"`
	// * Configuration for the benchmark run
	Config *ConfigFile `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	// * Command used to run the benchmark
	Cmd           string `protobuf:"bytes,4,opt,name=cmd,proto3" json:"cmd,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StroppyRun) Reset() {
	*x = StroppyRun{}
	mi := &file_stroppy_cloud_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StroppyRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StroppyRun) ProtoMessage() {}

func (x *StroppyRun) ProtoReflect() protoreflect.Message {
	mi := &file_stroppy_cloud_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StroppyRun.ProtoReflect.Descriptor instead.
func (*StroppyRun) Descriptor() ([]byte, []int) {
	return file_stroppy_cloud_proto_rawDescGZIP(), []int{1}
}

func (x *StroppyRun) GetId() *Ulid {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *StroppyRun) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_IDLE
}

func (x *StroppyRun) GetConfig() *ConfigFile {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *StroppyRun) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

var File_stroppy_cloud_proto protoreflect.FileDescriptor

const file_stroppy_cloud_proto_rawDesc = "" +
	"\n" +
	"\x13stroppy/cloud.proto\x12\astroppy\x1a\x14stroppy/common.proto\x1a\x17validate/validate.proto\x1a\x14stroppy/config.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x15stroppy/runtime.proto\"\xe5\x01\n" +
	"\x0eStroppyStepRun\x12'\n" +
	"\x02id\x18\x01 \x01(\v2\r.stroppy.UlidB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x02id\x12=\n" +
	"\x0estroppy_run_id\x18\x02 \x01(\v2\r.stroppy.UlidB\b\xfaB\x05\x8a\x01\x02\x10\x01R\fstroppyRunId\x128\n" +
	"\acontext\x18\x03 \x01(\v2\x14.stroppy.StepContextB\b\xfaB\x05\x8a\x01\x02\x10\x01R\acontext\x121\n" +
	"\x06status\x18\x04 \x01(\x0e2\x0f.stroppy.StatusB\b\xfaB\x05\x82\x01\x02\x10\x01R\x06status\"\xba\x01\n" +
	"\n" +
	"StroppyRun\x12'\n" +
	"\x02id\x18\x01 \x01(\v2\r.stroppy.UlidB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x02id\x121\n" +
	"\x06status\x18\x02 \x01(\x0e2\x0f.stroppy.StatusB\b\xfaB\x05\x82\x01\x02\x10\x01R\x06status\x125\n" +
	"\x06config\x18\x03 \x01(\v2\x13.stroppy.ConfigFileB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x06config\x12\x19\n" +
	"\x03cmd\x18\x04 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x03cmd*l\n" +
	"\x06Status\x12\x0f\n" +
	"\vSTATUS_IDLE\x10\x00\x12\x12\n" +
	"\x0eSTATUS_RUNNING\x10\x01\x12\x14\n" +
	"\x10STATUS_COMPLETED\x10\x02\x12\x11\n" +
	"\rSTATUS_FAILED\x10\x03\x12\x14\n" +
	"\x10STATUS_CANCELLED\x10\x042\x8d\x01\n" +
	"\x12CloudStatusService\x128\n" +
	"\tNotifyRun\x12\x13.stroppy.StroppyRun\x1a\x16.google.protobuf.Empty\x12=\n" +
	"\n" +
	"NotifyStep\x12\x17.stroppy.StroppyStepRun\x1a\x16.google.protobuf.EmptyB0Z.github.com/stroppy-io/stroppy/pkg/common/protob\x06proto3"

var (
	file_stroppy_cloud_proto_rawDescOnce sync.Once
	file_stroppy_cloud_proto_rawDescData []byte
)

func file_stroppy_cloud_proto_rawDescGZIP() []byte {
	file_stroppy_cloud_proto_rawDescOnce.Do(func() {
		file_stroppy_cloud_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_stroppy_cloud_proto_rawDesc), len(file_stroppy_cloud_proto_rawDesc)))
	})
	return file_stroppy_cloud_proto_rawDescData
}

var file_stroppy_cloud_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_stroppy_cloud_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_stroppy_cloud_proto_goTypes = []any{
	(Status)(0),            // 0: stroppy.Status
	(*StroppyStepRun)(nil), // 1: stroppy.StroppyStepRun
	(*StroppyRun)(nil),     // 2: stroppy.StroppyRun
	(*Ulid)(nil),           // 3: stroppy.Ulid
	(*StepContext)(nil),    // 4: stroppy.StepContext
	(*ConfigFile)(nil),     // 5: stroppy.ConfigFile
	(*emptypb.Empty)(nil),  // 6: google.protobuf.Empty
}
var file_stroppy_cloud_proto_depIdxs = []int32{
	3, // 0: stroppy.StroppyStepRun.id:type_name -> stroppy.Ulid
	3, // 1: stroppy.StroppyStepRun.stroppy_run_id:type_name -> stroppy.Ulid
	4, // 2: stroppy.StroppyStepRun.context:type_name -> stroppy.StepContext
	0, // 3: stroppy.StroppyStepRun.status:type_name -> stroppy.Status
	3, // 4: stroppy.StroppyRun.id:type_name -> stroppy.Ulid
	0, // 5: stroppy.StroppyRun.status:type_name -> stroppy.Status
	5, // 6: stroppy.StroppyRun.config:type_name -> stroppy.ConfigFile
	2, // 7: stroppy.CloudStatusService.NotifyRun:input_type -> stroppy.StroppyRun
	1, // 8: stroppy.CloudStatusService.NotifyStep:input_type -> stroppy.StroppyStepRun
	6, // 9: stroppy.CloudStatusService.NotifyRun:output_type -> google.protobuf.Empty
	6, // 10: stroppy.CloudStatusService.NotifyStep:output_type -> google.protobuf.Empty
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_stroppy_cloud_proto_init() }
func file_stroppy_cloud_proto_init() {
	if File_stroppy_cloud_proto != nil {
		return
	}
	file_stroppy_common_proto_init()
	file_stroppy_config_proto_init()
	file_stroppy_runtime_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_stroppy_cloud_proto_rawDesc), len(file_stroppy_cloud_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stroppy_cloud_proto_goTypes,
		DependencyIndexes: file_stroppy_cloud_proto_depIdxs,
		EnumInfos:         file_stroppy_cloud_proto_enumTypes,
		MessageInfos:      file_stroppy_cloud_proto_msgTypes,
	}.Build()
	File_stroppy_cloud_proto = out.File
	file_stroppy_cloud_proto_goTypes = nil
	file_stroppy_cloud_proto_depIdxs = nil
}
