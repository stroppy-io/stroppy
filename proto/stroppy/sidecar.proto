syntax = "proto3";

package stroppy;

import "common.proto";
import "config.proto";
import "descriptor.proto";

import "google/protobuf/empty.proto";

option go_package = "github.com/stroppy-io/stroppy/pkg/core/proto";

/**
 * UnitBuildContext provides the context needed to build a unit from a
 * StepUnitDescriptor.
 */
message UnitBuildContext {
    StepContext context = 1;
    stroppy.StepUnitDescriptor unit = 2;
}

/**
 * DriverQuery represents a query that can be executed by a database driver.
 */
message DriverQuery {
    string name = 1;
    string request = 2;
    repeated stroppy.Value params = 3;
}

/**
 * DriverTransaction represents a transaction that can be executed by a database
 * driver.
 */
message DriverTransaction {
    repeated DriverQuery queries = 1;
    TxIsolationLevel isolation_level = 2;
}

/**
 * DriverTransactionList is a list of transactions.
 */
message DriverTransactionList { repeated DriverTransaction transactions = 1; }

/**
 * SidecarPlugin defines the gRPC service that sidecar plugins must implement.
 */
service SidecarPlugin {
    /**
     * Initialize is called once before the benchmark starts.
     * Used to initialize resources of SidecarPlugin.
     */
    rpc Initialize(stroppy.Config) returns (google.protobuf.Empty);
    /**
     * OnStepStart is called once before each step starts.
     */
    rpc OnStepStart(stroppy.StepContext) returns (google.protobuf.Empty);
    /**
     * OnStepEnd is called once after each step ends.
     */
    rpc OnStepEnd(stroppy.StepContext) returns (google.protobuf.Empty);
    /**
     * Teardown is called once after the benchmark ends.
     * Used to clean up resources.
     */
    rpc Teardown(google.protobuf.Empty) returns (google.protobuf.Empty);
}
