{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$ref": "#/$defs/.stroppy.ConfigFile",
  "$defs": {
    ".stroppy.BenchmarkDescriptor": {
      "properties": {
        "name": {
          "$ref": "#/$defs/.stroppy.BenchmarkDescriptor.name"
        },
        "workloads": {
          "$ref": "#/$defs/.stroppy.BenchmarkDescriptor.workloads"
        }
      },
      "type": "object",
      "required": [
        "name"
      ],
      "description": "*\n BenchmarkDescriptor defines a complete benchmark consisting of multiple\n steps."
    },
    ".stroppy.BenchmarkDescriptor.name": {
      "type": "string",
      "description": "* Name of the benchmark"
    },
    ".stroppy.BenchmarkDescriptor.workloads": {
      "items": {
        "$ref": "#/$defs/.stroppy.WorkloadDescriptor",
        "description": "* List of steps to execute in the benchmark"
      },
      "type": "array",
      "description": "* List of steps to execute in the benchmark"
    },
    ".stroppy.ColumnDescriptor": {
      "properties": {
        "name": {
          "$ref": "#/$defs/.stroppy.ColumnDescriptor.name"
        },
        "sqlType": {
          "$ref": "#/$defs/.stroppy.ColumnDescriptor.sql_type"
        },
        "nullable": {
          "$ref": "#/$defs/.stroppy.ColumnDescriptor.nullable"
        },
        "primaryKey": {
          "$ref": "#/$defs/.stroppy.ColumnDescriptor.primary_key"
        },
        "unique": {
          "$ref": "#/$defs/.stroppy.ColumnDescriptor.unique"
        },
        "constraint": {
          "$ref": "#/$defs/.stroppy.ColumnDescriptor.constraint"
        }
      },
      "type": "object",
      "required": [
        "name",
        "sqlType",
        "nullable",
        "primaryKey",
        "unique",
        "constraint"
      ],
      "description": "*\n ColumnDescriptor defines the structure of a database column."
    },
    ".stroppy.ColumnDescriptor.constraint": {
      "type": "string",
      "description": "* SQL constraint definition for the column"
    },
    ".stroppy.ColumnDescriptor.name": {
      "type": "string",
      "description": "* Name of the column"
    },
    ".stroppy.ColumnDescriptor.nullable": {
      "type": "boolean",
      "description": "* Whether the column can be NULL"
    },
    ".stroppy.ColumnDescriptor.primary_key": {
      "type": "boolean",
      "description": "* Whether the column is part of the primary key"
    },
    ".stroppy.ColumnDescriptor.sql_type": {
      "type": "string",
      "description": "* SQL data type of the column"
    },
    ".stroppy.ColumnDescriptor.unique": {
      "type": "boolean",
      "description": "* Whether the column has a UNIQUE constraint"
    },
    ".stroppy.ConfigFile": {
      "properties": {
        "global": {
          "$ref": "#/$defs/.stroppy.ConfigFile.global"
        },
        "exporters": {
          "$ref": "#/$defs/.stroppy.ConfigFile.exporters"
        },
        "executors": {
          "$ref": "#/$defs/.stroppy.ConfigFile.executors"
        },
        "steps": {
          "$ref": "#/$defs/.stroppy.ConfigFile.steps"
        },
        "sideCars": {
          "$ref": "#/$defs/.stroppy.ConfigFile.side_cars"
        },
        "benchmark": {
          "$ref": "#/$defs/.stroppy.ConfigFile.benchmark"
        }
      },
      "type": "object",
      "required": [
        "global",
        "benchmark"
      ],
      "description": "*\n ConfigFile contains the complete configuration for a benchmark run in file."
    },
    ".stroppy.ConfigFile.benchmark": {
      "$ref": "#/$defs/.stroppy.BenchmarkDescriptor",
      "description": "* BenchmarkDescriptor defines a complete benchmark consisting of multiple steps."
    },
    ".stroppy.ConfigFile.executors": {
      "items": {
        "$ref": "#/$defs/.stroppy.ExecutorConfig",
        "description": "* Executors configuration"
      },
      "type": "array",
      "description": "* Executors configuration"
    },
    ".stroppy.ConfigFile.exporters": {
      "items": {
        "$ref": "#/$defs/.stroppy.ExporterConfig",
        "description": "* Exporters configuration"
      },
      "type": "array",
      "description": "* Exporters configuration"
    },
    ".stroppy.ConfigFile.global": {
      "$ref": "#/$defs/.stroppy.GlobalConfig",
      "description": "* Global configuration"
    },
    ".stroppy.ConfigFile.side_cars": {
      "items": {
        "$ref": "#/$defs/.stroppy.SideCarConfig",
        "description": "* Plugins configuration"
      },
      "type": "array",
      "description": "* Plugins configuration"
    },
    ".stroppy.ConfigFile.steps": {
      "items": {
        "$ref": "#/$defs/.stroppy.Step",
        "description": "* Step to executor mapping configuration"
      },
      "type": "array",
      "description": "* Step to executor mapping configuration"
    },
    ".stroppy.ConstantArrivalRate": {
      "properties": {
        "rate": {
          "$ref": "#/$defs/.stroppy.ConstantArrivalRate.rate"
        },
        "timeUnit": {
          "$ref": "#/$defs/.stroppy.ConstantArrivalRate.time_unit"
        },
        "duration": {
          "$ref": "#/$defs/.stroppy.ConstantArrivalRate.duration"
        },
        "preAllocatedVus": {
          "$ref": "#/$defs/.stroppy.ConstantArrivalRate.pre_allocated_vus"
        },
        "maxVus": {
          "$ref": "#/$defs/.stroppy.ConstantArrivalRate.max_vus"
        }
      },
      "type": "object",
      "required": [
        "rate",
        "timeUnit",
        "duration",
        "preAllocatedVus",
        "maxVus"
      ],
      "description": "*\n ConstantArrivalRate executor configuration.\n Documentation: https://grafana.com/docs/k6/latest/using-k6/scenarios/executors/constant-arrival-rate/"
    },
    ".stroppy.ConstantArrivalRate.duration": {
      "type": "string",
      "format": "duration",
      "description": "* Duration of the scenario"
    },
    ".stroppy.ConstantArrivalRate.max_vus": {
      "type": "integer",
      "description": "* Maximum allowed number of VUs if load increases"
    },
    ".stroppy.ConstantArrivalRate.pre_allocated_vus": {
      "type": "integer",
      "description": "* Number of VUs allocated in advance"
    },
    ".stroppy.ConstantArrivalRate.rate": {
      "type": "integer",
      "description": "* Rate of iteration generation (number per time unit)"
    },
    ".stroppy.ConstantArrivalRate.time_unit": {
      "type": "string",
      "format": "duration",
      "description": "* Time unit for the \"rate\" field (e.g., \"1s\")"
    },
    ".stroppy.ConstantVUs": {
      "properties": {
        "vus": {
          "$ref": "#/$defs/.stroppy.ConstantVUs.vus"
        },
        "duration": {
          "$ref": "#/$defs/.stroppy.ConstantVUs.duration"
        }
      },
      "type": "object",
      "required": [
        "vus",
        "duration"
      ],
      "description": "*\n ConstantVUs executor configuration.\n Documentation: https://grafana.com/docs/k6/latest/using-k6/scenarios/executors/constant-vus/"
    },
    ".stroppy.ConstantVUs.duration": {
      "type": "string",
      "format": "duration",
      "description": "* Duration of the scenario execution.\n All VUs will start and execute iterations until this time is completed."
    },
    ".stroppy.ConstantVUs.vus": {
      "type": "integer",
      "description": "* Fixed number of virtual users that will be simultaneously active at all times"
    },
    ".stroppy.DateTime": {
      "properties": {
        "value": {
          "$ref": "#/$defs/.stroppy.DateTime.value"
        }
      },
      "type": "object",
      "required": [
        "value"
      ],
      "description": "*\n DateTime represents a point in time, independent of any time zone or calendar."
    },
    ".stroppy.DateTime.value": {
      "type": "string",
      "format": "date-time",
      "description": "* Timestamp in UTC"
    },
    ".stroppy.Decimal": {
      "properties": {
        "value": {
          "$ref": "#/$defs/.stroppy.Decimal.value"
        }
      },
      "type": "object",
      "required": [
        "value"
      ],
      "description": "*\n Decimal represents an arbitrary-precision decimal number."
    },
    ".stroppy.Decimal.value": {
      "type": "string",
      "description": "* String representation of the decimal number"
    },
    ".stroppy.DriverConfig": {
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "dbSpecific"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "dbSpecific"
                    ]
                  }
                ]
              }
            }
          ]
        }
      ],
      "properties": {
        "url": {
          "$ref": "#/$defs/.stroppy.DriverConfig.url"
        },
        "dbSpecific": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.DriverConfig.db_specific"
            }
          ]
        },
        "driverType": {
          "$ref": "#/$defs/.stroppy.DriverConfig.driver_type"
        }
      },
      "type": "object",
      "required": [
        "url",
        "driverType"
      ],
      "description": "*\n DriverConfig contains configuration for connecting to a database driver.\n It includes the driver plugin path, connection URL, and database-specific settings."
    },
    ".stroppy.DriverConfig.DriverType": {
      "type": "string",
      "enum": [
        "DRIVER_TYPE_UNSPECIFIED",
        "DRIVER_TYPE_POSTGRES"
      ]
    },
    ".stroppy.DriverConfig.db_specific": {
      "$ref": "#/$defs/.stroppy.Value.Struct",
      "description": "* Database-specific configuration options"
    },
    ".stroppy.DriverConfig.driver_type": {
      "$ref": "#/$defs/.stroppy.DriverConfig.DriverType",
      "description": "* Name/Type of chosen driver"
    },
    ".stroppy.DriverConfig.url": {
      "type": "string",
      "description": "* Database connection URL"
    },
    ".stroppy.ExecutorConfig": {
      "properties": {
        "name": {
          "$ref": "#/$defs/.stroppy.ExecutorConfig.name"
        },
        "k6": {
          "$ref": "#/$defs/.stroppy.ExecutorConfig.k6"
        }
      },
      "type": "object",
      "required": [
        "name",
        "k6"
      ],
      "description": "*\n ExecutorConfig contains configuration for an executor."
    },
    ".stroppy.ExecutorConfig.k6": {
      "$ref": "#/$defs/.stroppy.K6Options",
      "description": "* Configuration for the executor"
    },
    ".stroppy.ExecutorConfig.name": {
      "type": "string",
      "description": "* Name of the executor"
    },
    ".stroppy.ExporterConfig": {
      "properties": {
        "name": {
          "$ref": "#/$defs/.stroppy.ExporterConfig.name"
        },
        "otlpExport": {
          "$ref": "#/$defs/.stroppy.ExporterConfig.otlp_export"
        }
      },
      "type": "object",
      "required": [
        "name",
        "otlpExport"
      ],
      "description": "*\n OtlpExporterConfig contains named configuration for an OTLP exporter."
    },
    ".stroppy.ExporterConfig.name": {
      "type": "string",
      "description": "* Name of the OTLP exporter"
    },
    ".stroppy.ExporterConfig.otlp_export": {
      "$ref": "#/$defs/.stroppy.OtlpExport",
      "description": "* Configuration for the OTLP exporter"
    },
    ".stroppy.Generation.Alphabet": {
      "properties": {
        "ranges": {
          "$ref": "#/$defs/.stroppy.Generation.Alphabet.ranges"
        }
      },
      "type": "object",
      "description": "*\n Alphabet defines character ranges for string generation."
    },
    ".stroppy.Generation.Alphabet.ranges": {
      "items": {
        "$ref": "#/$defs/.stroppy.Generation.Range.UInt32Range",
        "description": "* List of character ranges for this alphabet"
      },
      "type": "array",
      "description": "* List of character ranges for this alphabet"
    },
    ".stroppy.Generation.Distribution": {
      "properties": {
        "type": {
          "$ref": "#/$defs/.stroppy.Generation.Distribution.type"
        },
        "screw": {
          "$ref": "#/$defs/.stroppy.Generation.Distribution.screw"
        }
      },
      "type": "object",
      "required": [
        "type",
        "screw"
      ],
      "description": "*\n Distribution defines the statistical distribution for value generation."
    },
    ".stroppy.Generation.Distribution.DistributionType": {
      "type": "string",
      "enum": [
        "NORMAL",
        "UNIFORM",
        "ZIPF"
      ]
    },
    ".stroppy.Generation.Distribution.screw": {
      "type": "number",
      "description": "* Distribution parameter (e.g., standard deviation for normal distribution)"
    },
    ".stroppy.Generation.Distribution.type": {
      "$ref": "#/$defs/.stroppy.Generation.Distribution.DistributionType",
      "description": "* Type of distribution to use"
    },
    ".stroppy.Generation.Range.AnyStringRange": {
      "properties": {
        "min": {
          "$ref": "#/$defs/.stroppy.Generation.Range.AnyStringRange.min"
        },
        "max": {
          "$ref": "#/$defs/.stroppy.Generation.Range.AnyStringRange.max"
        }
      },
      "type": "object",
      "required": [
        "min",
        "max"
      ],
      "description": "* Range for string values that can be parsed into other types"
    },
    ".stroppy.Generation.Range.AnyStringRange.max": {
      "type": "string",
      "description": "* Maximum value (inclusive)"
    },
    ".stroppy.Generation.Range.AnyStringRange.min": {
      "type": "string",
      "description": "* Minimum value (inclusive)"
    },
    ".stroppy.Generation.Range.DateTimeRange": {
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "default"
              ]
            },
            {
              "required": [
                "string"
              ]
            },
            {
              "required": [
                "timestampPb"
              ]
            },
            {
              "required": [
                "timestamp"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "default"
                    ]
                  },
                  {
                    "required": [
                      "string"
                    ]
                  },
                  {
                    "required": [
                      "timestampPb"
                    ]
                  },
                  {
                    "required": [
                      "timestamp"
                    ]
                  }
                ]
              }
            }
          ]
        }
      ],
      "properties": {
        "default": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Range.DateTimeRange.default"
            }
          ]
        },
        "string": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Range.DateTimeRange.string"
            }
          ]
        },
        "timestampPb": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Range.DateTimeRange.timestamp_pb"
            }
          ]
        },
        "timestamp": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Range.DateTimeRange.timestamp"
            }
          ]
        }
      },
      "type": "object",
      "description": "* Range for date/time values"
    },
    ".stroppy.Generation.Range.DateTimeRange.Default": {
      "properties": {
        "min": {
          "$ref": "#/$defs/.stroppy.Generation.Range.DateTimeRange.Default.min"
        },
        "max": {
          "$ref": "#/$defs/.stroppy.Generation.Range.DateTimeRange.Default.max"
        }
      },
      "type": "object",
      "required": [
        "min",
        "max"
      ],
      "description": "* Default date/time range"
    },
    ".stroppy.Generation.Range.DateTimeRange.Default.max": {
      "$ref": "#/$defs/.stroppy.DateTime",
      "description": "* Maximum timestamp (inclusive)"
    },
    ".stroppy.Generation.Range.DateTimeRange.Default.min": {
      "$ref": "#/$defs/.stroppy.DateTime",
      "description": "* Minimum timestamp (inclusive)"
    },
    ".stroppy.Generation.Range.DateTimeRange.Timestamp": {
      "properties": {
        "min": {
          "$ref": "#/$defs/.stroppy.Generation.Range.DateTimeRange.Timestamp.min"
        },
        "max": {
          "$ref": "#/$defs/.stroppy.Generation.Range.DateTimeRange.Timestamp.max"
        }
      },
      "type": "object",
      "required": [
        "min",
        "max"
      ],
      "description": "* Unix timestamp range"
    },
    ".stroppy.Generation.Range.DateTimeRange.Timestamp.max": {
      "type": "integer",
      "description": "* Maximum Unix timestamp (inclusive)"
    },
    ".stroppy.Generation.Range.DateTimeRange.Timestamp.min": {
      "type": "integer",
      "description": "* Minimum Unix timestamp (inclusive)"
    },
    ".stroppy.Generation.Range.DateTimeRange.TimestampPb": {
      "properties": {
        "min": {
          "$ref": "#/$defs/.stroppy.Generation.Range.DateTimeRange.TimestampPb.min"
        },
        "max": {
          "$ref": "#/$defs/.stroppy.Generation.Range.DateTimeRange.TimestampPb.max"
        }
      },
      "type": "object",
      "required": [
        "min",
        "max"
      ],
      "description": "* Protocol Buffers timestamp range"
    },
    ".stroppy.Generation.Range.DateTimeRange.TimestampPb.max": {
      "type": "string",
      "format": "date-time",
      "description": "* Maximum timestamp (inclusive)"
    },
    ".stroppy.Generation.Range.DateTimeRange.TimestampPb.min": {
      "type": "string",
      "format": "date-time",
      "description": "* Minimum timestamp (inclusive)"
    },
    ".stroppy.Generation.Range.DateTimeRange.default": {
      "$ref": "#/$defs/.stroppy.Generation.Range.DateTimeRange.Default",
      "description": "* Exact date/time range"
    },
    ".stroppy.Generation.Range.DateTimeRange.string": {
      "$ref": "#/$defs/.stroppy.Generation.Range.AnyStringRange",
      "description": "* String-based range (ISO 8601 format)"
    },
    ".stroppy.Generation.Range.DateTimeRange.timestamp": {
      "$ref": "#/$defs/.stroppy.Generation.Range.DateTimeRange.Timestamp",
      "description": "* Unix timestamp range"
    },
    ".stroppy.Generation.Range.DateTimeRange.timestamp_pb": {
      "$ref": "#/$defs/.stroppy.Generation.Range.DateTimeRange.TimestampPb",
      "description": "* Protocol Buffers timestamp range"
    },
    ".stroppy.Generation.Range.DecimalRange": {
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "default"
              ]
            },
            {
              "required": [
                "float"
              ]
            },
            {
              "required": [
                "double"
              ]
            },
            {
              "required": [
                "string"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "default"
                    ]
                  },
                  {
                    "required": [
                      "float"
                    ]
                  },
                  {
                    "required": [
                      "double"
                    ]
                  },
                  {
                    "required": [
                      "string"
                    ]
                  }
                ]
              }
            }
          ]
        }
      ],
      "properties": {
        "default": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Range.DecimalRange.default"
            }
          ]
        },
        "float": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Range.DecimalRange.float"
            }
          ]
        },
        "double": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Range.DecimalRange.double"
            }
          ]
        },
        "string": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Range.DecimalRange.string"
            }
          ]
        }
      },
      "type": "object",
      "description": "* Range for decimal numbers"
    },
    ".stroppy.Generation.Range.DecimalRange.Default": {
      "properties": {
        "min": {
          "$ref": "#/$defs/.stroppy.Generation.Range.DecimalRange.Default.min"
        },
        "max": {
          "$ref": "#/$defs/.stroppy.Generation.Range.DecimalRange.Default.max"
        }
      },
      "type": "object",
      "required": [
        "min",
        "max"
      ],
      "description": "* Default decimal range"
    },
    ".stroppy.Generation.Range.DecimalRange.Default.max": {
      "$ref": "#/$defs/.stroppy.Decimal",
      "description": "* Maximum value (inclusive)"
    },
    ".stroppy.Generation.Range.DecimalRange.Default.min": {
      "$ref": "#/$defs/.stroppy.Decimal",
      "description": "* Minimum value (inclusive)"
    },
    ".stroppy.Generation.Range.DecimalRange.default": {
      "$ref": "#/$defs/.stroppy.Generation.Range.DecimalRange.Default",
      "description": "* Exact decimal range"
    },
    ".stroppy.Generation.Range.DecimalRange.double": {
      "$ref": "#/$defs/.stroppy.Generation.Range.DoubleRange",
      "description": "* Double-based range"
    },
    ".stroppy.Generation.Range.DecimalRange.float": {
      "$ref": "#/$defs/.stroppy.Generation.Range.FloatRange",
      "description": "* Float-based range"
    },
    ".stroppy.Generation.Range.DecimalRange.string": {
      "$ref": "#/$defs/.stroppy.Generation.Range.AnyStringRange",
      "description": "* String-based range (supports scientific notation)"
    },
    ".stroppy.Generation.Range.DoubleRange": {
      "properties": {
        "min": {
          "$ref": "#/$defs/.stroppy.Generation.Range.DoubleRange.min"
        },
        "max": {
          "$ref": "#/$defs/.stroppy.Generation.Range.DoubleRange.max"
        }
      },
      "type": "object",
      "required": [
        "min",
        "max"
      ],
      "description": "* Range for 64-bit floating point numbers"
    },
    ".stroppy.Generation.Range.DoubleRange.max": {
      "type": "number",
      "description": "* Maximum value (inclusive)"
    },
    ".stroppy.Generation.Range.DoubleRange.min": {
      "type": "number",
      "description": "* Minimum value (inclusive)"
    },
    ".stroppy.Generation.Range.FloatRange": {
      "properties": {
        "min": {
          "$ref": "#/$defs/.stroppy.Generation.Range.FloatRange.min"
        },
        "max": {
          "$ref": "#/$defs/.stroppy.Generation.Range.FloatRange.max"
        }
      },
      "type": "object",
      "required": [
        "min",
        "max"
      ],
      "description": "* Range for 32-bit floating point numbers"
    },
    ".stroppy.Generation.Range.FloatRange.max": {
      "type": "number",
      "description": "* Maximum value (inclusive)"
    },
    ".stroppy.Generation.Range.FloatRange.min": {
      "type": "number",
      "description": "* Minimum value (inclusive)"
    },
    ".stroppy.Generation.Range.Int32Range": {
      "properties": {
        "min": {
          "$ref": "#/$defs/.stroppy.Generation.Range.Int32Range.min"
        },
        "max": {
          "$ref": "#/$defs/.stroppy.Generation.Range.Int32Range.max"
        }
      },
      "type": "object",
      "required": [
        "min",
        "max"
      ],
      "description": "* Range for 32-bit signed integers"
    },
    ".stroppy.Generation.Range.Int32Range.max": {
      "type": "integer",
      "description": "* Maximum value (inclusive)"
    },
    ".stroppy.Generation.Range.Int32Range.min": {
      "type": "integer",
      "description": "* Minimum value (inclusive)"
    },
    ".stroppy.Generation.Range.Int64Range": {
      "properties": {
        "min": {
          "$ref": "#/$defs/.stroppy.Generation.Range.Int64Range.min"
        },
        "max": {
          "$ref": "#/$defs/.stroppy.Generation.Range.Int64Range.max"
        }
      },
      "type": "object",
      "required": [
        "min",
        "max"
      ],
      "description": "* Range for 64-bit signed integers"
    },
    ".stroppy.Generation.Range.Int64Range.max": {
      "type": "string",
      "format": "int64",
      "description": "* Maximum value (inclusive)"
    },
    ".stroppy.Generation.Range.Int64Range.min": {
      "type": "string",
      "format": "int64",
      "description": "* Minimum value (inclusive)"
    },
    ".stroppy.Generation.Range.UInt32Range": {
      "properties": {
        "min": {
          "$ref": "#/$defs/.stroppy.Generation.Range.UInt32Range.min"
        },
        "max": {
          "$ref": "#/$defs/.stroppy.Generation.Range.UInt32Range.max"
        }
      },
      "type": "object",
      "required": [
        "min",
        "max"
      ],
      "description": "* Range for 32-bit unsigned integers"
    },
    ".stroppy.Generation.Range.UInt32Range.max": {
      "type": "integer",
      "description": "* Maximum value (inclusive)"
    },
    ".stroppy.Generation.Range.UInt32Range.min": {
      "type": "integer",
      "description": "* Minimum value (inclusive)"
    },
    ".stroppy.Generation.Range.UInt64Range": {
      "properties": {
        "min": {
          "$ref": "#/$defs/.stroppy.Generation.Range.UInt64Range.min"
        },
        "max": {
          "$ref": "#/$defs/.stroppy.Generation.Range.UInt64Range.max"
        }
      },
      "type": "object",
      "required": [
        "min",
        "max"
      ],
      "description": "* Range for 64-bit unsigned integers"
    },
    ".stroppy.Generation.Range.UInt64Range.max": {
      "type": "string",
      "format": "int64",
      "description": "* Maximum value (inclusive)"
    },
    ".stroppy.Generation.Range.UInt64Range.min": {
      "type": "string",
      "format": "int64",
      "description": "* Minimum value (inclusive)"
    },
    ".stroppy.Generation.Rule": {
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "floatRules"
              ]
            },
            {
              "required": [
                "doubleRules"
              ]
            },
            {
              "required": [
                "int32Rules"
              ]
            },
            {
              "required": [
                "int64Rules"
              ]
            },
            {
              "required": [
                "uint32Rules"
              ]
            },
            {
              "required": [
                "uint64Rules"
              ]
            },
            {
              "required": [
                "boolRules"
              ]
            },
            {
              "required": [
                "stringRules"
              ]
            },
            {
              "required": [
                "datetimeRules"
              ]
            },
            {
              "required": [
                "uuidRules"
              ]
            },
            {
              "required": [
                "decimalRules"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "floatRules"
                    ]
                  },
                  {
                    "required": [
                      "doubleRules"
                    ]
                  },
                  {
                    "required": [
                      "int32Rules"
                    ]
                  },
                  {
                    "required": [
                      "int64Rules"
                    ]
                  },
                  {
                    "required": [
                      "uint32Rules"
                    ]
                  },
                  {
                    "required": [
                      "uint64Rules"
                    ]
                  },
                  {
                    "required": [
                      "boolRules"
                    ]
                  },
                  {
                    "required": [
                      "stringRules"
                    ]
                  },
                  {
                    "required": [
                      "datetimeRules"
                    ]
                  },
                  {
                    "required": [
                      "uuidRules"
                    ]
                  },
                  {
                    "required": [
                      "decimalRules"
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "oneOf": [
            {
              "required": [
                "distribution"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "distribution"
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "oneOf": [
            {
              "required": [
                "nullPercentage"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "nullPercentage"
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "oneOf": [
            {
              "required": [
                "unique"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "unique"
                    ]
                  }
                ]
              }
            }
          ]
        }
      ],
      "properties": {
        "floatRules": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Rule.float_rules"
            }
          ]
        },
        "doubleRules": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Rule.double_rules"
            }
          ]
        },
        "int32Rules": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Rule.int32_rules"
            }
          ]
        },
        "int64Rules": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Rule.int64_rules"
            }
          ]
        },
        "uint32Rules": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Rule.uint32_rules"
            }
          ]
        },
        "uint64Rules": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Rule.uint64_rules"
            }
          ]
        },
        "boolRules": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Rule.bool_rules"
            }
          ]
        },
        "stringRules": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Rule.string_rules"
            }
          ]
        },
        "datetimeRules": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Rule.datetime_rules"
            }
          ]
        },
        "uuidRules": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Rule.uuid_rules"
            }
          ]
        },
        "decimalRules": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Rule.decimal_rules"
            }
          ]
        },
        "distribution": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Rule.distribution"
            }
          ]
        },
        "nullPercentage": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Rule.null_percentage"
            }
          ]
        },
        "unique": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Rule.unique"
            }
          ]
        }
      },
      "type": "object",
      "description": "*\n Rule defines generation rules for a specific data type."
    },
    ".stroppy.Generation.Rule.bool_rules": {
      "$ref": "#/$defs/.stroppy.Generation.Rules.BoolRule",
      "description": "* Rules for boolean values"
    },
    ".stroppy.Generation.Rule.datetime_rules": {
      "$ref": "#/$defs/.stroppy.Generation.Rules.DateTimeRule",
      "description": "* Rules for date/time values"
    },
    ".stroppy.Generation.Rule.decimal_rules": {
      "$ref": "#/$defs/.stroppy.Generation.Rules.DecimalRule",
      "description": "* Rules for decimal numbers"
    },
    ".stroppy.Generation.Rule.distribution": {
      "$ref": "#/$defs/.stroppy.Generation.Distribution"
    },
    ".stroppy.Generation.Rule.double_rules": {
      "$ref": "#/$defs/.stroppy.Generation.Rules.DoubleRule",
      "description": "* Rules for 64-bit floating point numbers"
    },
    ".stroppy.Generation.Rule.float_rules": {
      "$ref": "#/$defs/.stroppy.Generation.Rules.FloatRule",
      "description": "* Rules for 32-bit floating point numbers"
    },
    ".stroppy.Generation.Rule.int32_rules": {
      "$ref": "#/$defs/.stroppy.Generation.Rules.Int32Rule",
      "description": "* Rules for 32-bit signed integers"
    },
    ".stroppy.Generation.Rule.int64_rules": {
      "$ref": "#/$defs/.stroppy.Generation.Rules.Int64Rule",
      "description": "* Rules for 64-bit signed integers"
    },
    ".stroppy.Generation.Rule.null_percentage": {
      "type": "integer"
    },
    ".stroppy.Generation.Rule.string_rules": {
      "$ref": "#/$defs/.stroppy.Generation.Rules.StringRule",
      "description": "* Rules for string values"
    },
    ".stroppy.Generation.Rule.uint32_rules": {
      "$ref": "#/$defs/.stroppy.Generation.Rules.UInt32Rule",
      "description": "* Rules for 32-bit unsigned integers"
    },
    ".stroppy.Generation.Rule.uint64_rules": {
      "$ref": "#/$defs/.stroppy.Generation.Rules.UInt64Rule",
      "description": "* Rules for 64-bit unsigned integers"
    },
    ".stroppy.Generation.Rule.unique": {
      "type": "boolean"
    },
    ".stroppy.Generation.Rule.uuid_rules": {
      "$ref": "#/$defs/.stroppy.Generation.Rules.UuidRule",
      "description": "* Rules for UUIDs"
    },
    ".stroppy.Generation.Rules.BoolRule": {
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "constant"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "constant"
                    ]
                  }
                ]
              }
            }
          ]
        }
      ],
      "properties": {
        "constant": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Rules.BoolRule.constant"
            }
          ]
        }
      },
      "type": "object",
      "description": "* Rules for generating boolean values"
    },
    ".stroppy.Generation.Rules.BoolRule.constant": {
      "type": "boolean",
      "description": "* Fixed value (if not specified, generates random booleans)"
    },
    ".stroppy.Generation.Rules.DateTimeRule": {
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "constant"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "constant"
                    ]
                  }
                ]
              }
            }
          ]
        }
      ],
      "properties": {
        "range": {
          "$ref": "#/$defs/.stroppy.Generation.Rules.DateTimeRule.range"
        },
        "constant": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Rules.DateTimeRule.constant"
            }
          ]
        }
      },
      "type": "object",
      "required": [
        "range"
      ],
      "description": "* Rules for generating date/time values"
    },
    ".stroppy.Generation.Rules.DateTimeRule.constant": {
      "$ref": "#/$defs/.stroppy.DateTime",
      "description": "* Fixed value (if specified, overrides range)"
    },
    ".stroppy.Generation.Rules.DateTimeRule.range": {
      "$ref": "#/$defs/.stroppy.Generation.Range.DateTimeRange",
      "description": "* Valid time range"
    },
    ".stroppy.Generation.Rules.DecimalRule": {
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "constant"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "constant"
                    ]
                  }
                ]
              }
            }
          ]
        }
      ],
      "properties": {
        "range": {
          "$ref": "#/$defs/.stroppy.Generation.Rules.DecimalRule.range"
        },
        "constant": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Rules.DecimalRule.constant"
            }
          ]
        }
      },
      "type": "object",
      "required": [
        "range"
      ],
      "description": "* Rules for generating decimal numbers"
    },
    ".stroppy.Generation.Rules.DecimalRule.constant": {
      "$ref": "#/$defs/.stroppy.Decimal",
      "description": "* Fixed value (if specified, overrides range)"
    },
    ".stroppy.Generation.Rules.DecimalRule.range": {
      "$ref": "#/$defs/.stroppy.Generation.Range.DecimalRange",
      "description": "* Valid value range"
    },
    ".stroppy.Generation.Rules.DoubleRule": {
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "constant"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "constant"
                    ]
                  }
                ]
              }
            }
          ]
        }
      ],
      "properties": {
        "range": {
          "$ref": "#/$defs/.stroppy.Generation.Rules.DoubleRule.range"
        },
        "constant": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Rules.DoubleRule.constant"
            }
          ]
        }
      },
      "type": "object",
      "required": [
        "range"
      ],
      "description": "* Rules for generating 64-bit floating point numbers"
    },
    ".stroppy.Generation.Rules.DoubleRule.constant": {
      "type": "number",
      "description": "* Fixed value (if specified, overrides range)"
    },
    ".stroppy.Generation.Rules.DoubleRule.range": {
      "$ref": "#/$defs/.stroppy.Generation.Range.DoubleRange",
      "description": "* Valid value range"
    },
    ".stroppy.Generation.Rules.FloatRule": {
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "constant"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "constant"
                    ]
                  }
                ]
              }
            }
          ]
        }
      ],
      "properties": {
        "range": {
          "$ref": "#/$defs/.stroppy.Generation.Rules.FloatRule.range"
        },
        "constant": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Rules.FloatRule.constant"
            }
          ]
        }
      },
      "type": "object",
      "required": [
        "range"
      ],
      "description": "* Rules for generating 32-bit floating point numbers"
    },
    ".stroppy.Generation.Rules.FloatRule.constant": {
      "type": "number",
      "description": "* Fixed value (if specified, overrides range)"
    },
    ".stroppy.Generation.Rules.FloatRule.range": {
      "$ref": "#/$defs/.stroppy.Generation.Range.FloatRange",
      "description": "* Valid value range"
    },
    ".stroppy.Generation.Rules.Int32Rule": {
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "constant"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "constant"
                    ]
                  }
                ]
              }
            }
          ]
        }
      ],
      "properties": {
        "range": {
          "$ref": "#/$defs/.stroppy.Generation.Rules.Int32Rule.range"
        },
        "constant": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Rules.Int32Rule.constant"
            }
          ]
        }
      },
      "type": "object",
      "required": [
        "range"
      ],
      "description": "* Rules for generating 32-bit signed integers"
    },
    ".stroppy.Generation.Rules.Int32Rule.constant": {
      "type": "integer",
      "description": "* Fixed value (if specified, overrides range)"
    },
    ".stroppy.Generation.Rules.Int32Rule.range": {
      "$ref": "#/$defs/.stroppy.Generation.Range.Int32Range",
      "description": "* Valid value range"
    },
    ".stroppy.Generation.Rules.Int64Rule": {
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "constant"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "constant"
                    ]
                  }
                ]
              }
            }
          ]
        }
      ],
      "properties": {
        "range": {
          "$ref": "#/$defs/.stroppy.Generation.Rules.Int64Rule.range"
        },
        "constant": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Rules.Int64Rule.constant"
            }
          ]
        }
      },
      "type": "object",
      "required": [
        "range"
      ],
      "description": "* Rules for generating 64-bit signed integers"
    },
    ".stroppy.Generation.Rules.Int64Rule.constant": {
      "type": "string",
      "format": "int64",
      "description": "* Fixed value (if specified, overrides range)"
    },
    ".stroppy.Generation.Rules.Int64Rule.range": {
      "$ref": "#/$defs/.stroppy.Generation.Range.Int64Range",
      "description": "* Valid value range"
    },
    ".stroppy.Generation.Rules.StringRule": {
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "alphabet"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "alphabet"
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "oneOf": [
            {
              "required": [
                "constant"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "constant"
                    ]
                  }
                ]
              }
            }
          ]
        }
      ],
      "properties": {
        "alphabet": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Rules.StringRule.alphabet"
            }
          ]
        },
        "lenRange": {
          "$ref": "#/$defs/.stroppy.Generation.Rules.StringRule.len_range"
        },
        "constant": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Rules.StringRule.constant"
            }
          ]
        }
      },
      "type": "object",
      "required": [
        "lenRange"
      ],
      "description": "* Rules for generating string values"
    },
    ".stroppy.Generation.Rules.StringRule.alphabet": {
      "$ref": "#/$defs/.stroppy.Generation.Alphabet",
      "description": "* Character set to use for generation"
    },
    ".stroppy.Generation.Rules.StringRule.constant": {
      "type": "string",
      "description": "* Fixed value (if specified, overrides generation)"
    },
    ".stroppy.Generation.Rules.StringRule.len_range": {
      "$ref": "#/$defs/.stroppy.Generation.Range.UInt64Range",
      "description": "* Valid length range for the string"
    },
    ".stroppy.Generation.Rules.UInt32Rule": {
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "constant"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "constant"
                    ]
                  }
                ]
              }
            }
          ]
        }
      ],
      "properties": {
        "range": {
          "$ref": "#/$defs/.stroppy.Generation.Rules.UInt32Rule.range"
        },
        "constant": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Rules.UInt32Rule.constant"
            }
          ]
        }
      },
      "type": "object",
      "required": [
        "range"
      ],
      "description": "* Rules for generating 32-bit unsigned integers"
    },
    ".stroppy.Generation.Rules.UInt32Rule.constant": {
      "type": "integer",
      "description": "* Fixed value (if specified, overrides range)"
    },
    ".stroppy.Generation.Rules.UInt32Rule.range": {
      "$ref": "#/$defs/.stroppy.Generation.Range.UInt32Range",
      "description": "* Valid value range"
    },
    ".stroppy.Generation.Rules.UInt64Rule": {
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "constant"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "constant"
                    ]
                  }
                ]
              }
            }
          ]
        }
      ],
      "properties": {
        "range": {
          "$ref": "#/$defs/.stroppy.Generation.Rules.UInt64Rule.range"
        },
        "constant": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Rules.UInt64Rule.constant"
            }
          ]
        }
      },
      "type": "object",
      "required": [
        "range"
      ],
      "description": "* Rules for generating 64-bit unsigned integers"
    },
    ".stroppy.Generation.Rules.UInt64Rule.constant": {
      "type": "string",
      "format": "int64",
      "description": "* Fixed value (if specified, overrides range)"
    },
    ".stroppy.Generation.Rules.UInt64Rule.range": {
      "$ref": "#/$defs/.stroppy.Generation.Range.UInt64Range",
      "description": "* Valid value range"
    },
    ".stroppy.Generation.Rules.UuidRule": {
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "constant"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "constant"
                    ]
                  }
                ]
              }
            }
          ]
        }
      ],
      "properties": {
        "constant": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Generation.Rules.UuidRule.constant"
            }
          ]
        }
      },
      "type": "object",
      "description": "* Rules for generating UUIDs"
    },
    ".stroppy.Generation.Rules.UuidRule.constant": {
      "$ref": "#/$defs/.stroppy.Uuid",
      "description": "* Fixed UUID (if not specified, generates random UUIDs)"
    },
    ".stroppy.GlobalConfig": {
      "properties": {
        "version": {
          "$ref": "#/$defs/.stroppy.GlobalConfig.version"
        },
        "runId": {
          "$ref": "#/$defs/.stroppy.GlobalConfig.run_id"
        },
        "seed": {
          "$ref": "#/$defs/.stroppy.GlobalConfig.seed"
        },
        "metadata": {
          "$ref": "#/$defs/.stroppy.GlobalConfig.metadata"
        },
        "driver": {
          "$ref": "#/$defs/.stroppy.GlobalConfig.driver"
        },
        "logger": {
          "$ref": "#/$defs/.stroppy.GlobalConfig.logger"
        }
      },
      "type": "object",
      "required": [
        "version",
        "runId",
        "seed",
        "driver",
        "logger"
      ]
    },
    ".stroppy.GlobalConfig.driver": {
      "$ref": "#/$defs/.stroppy.DriverConfig",
      "description": "* Database driver configuration"
    },
    ".stroppy.GlobalConfig.logger": {
      "$ref": "#/$defs/.stroppy.LoggerConfig",
      "description": "* Logging configuration"
    },
    ".stroppy.GlobalConfig.metadata": {
      "additionalProperties": {
        "type": "string"
      },
      "type": "object",
      "description": "* Arbitrary metadata, may be passed to result labels and json output"
    },
    ".stroppy.GlobalConfig.run_id": {
      "type": "string",
      "description": "*\n Run identifier for reproducible test runs or debugging\n If set to \"generate()\" stroppy eval ulid for run_id"
    },
    ".stroppy.GlobalConfig.seed": {
      "type": "string",
      "format": "int64",
      "description": "* Random seed for reproducible test runs"
    },
    ".stroppy.GlobalConfig.version": {
      "type": "string",
      "description": "*\n Version of the configuration format e.g. proto files version.\n This is used for backward compatibility of configs\n and will be set automatically from binary run if not present."
    },
    ".stroppy.IndexDescriptor": {
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "dbSpecific"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "dbSpecific"
                    ]
                  }
                ]
              }
            }
          ]
        }
      ],
      "properties": {
        "name": {
          "$ref": "#/$defs/.stroppy.IndexDescriptor.name"
        },
        "columns": {
          "$ref": "#/$defs/.stroppy.IndexDescriptor.columns"
        },
        "type": {
          "$ref": "#/$defs/.stroppy.IndexDescriptor.type"
        },
        "unique": {
          "$ref": "#/$defs/.stroppy.IndexDescriptor.unique"
        },
        "dbSpecific": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.IndexDescriptor.db_specific"
            }
          ]
        }
      },
      "type": "object",
      "required": [
        "name",
        "type",
        "unique"
      ],
      "description": "*\n IndexDescriptor defines the structure of a database index."
    },
    ".stroppy.IndexDescriptor.columns": {
      "items": {
        "type": "string",
        "description": "* List of column names that are part of this index"
      },
      "type": "array",
      "description": "* List of column names that are part of this index"
    },
    ".stroppy.IndexDescriptor.db_specific": {
      "$ref": "#/$defs/.stroppy.Value.Struct",
      "description": "* Database-specific index properties"
    },
    ".stroppy.IndexDescriptor.name": {
      "type": "string",
      "description": "* Name of the index"
    },
    ".stroppy.IndexDescriptor.type": {
      "type": "string",
      "description": "* Type of index (e.g., BTREE, HASH, etc.)"
    },
    ".stroppy.IndexDescriptor.unique": {
      "type": "boolean",
      "description": "* Whether this is a unique index"
    },
    ".stroppy.K6Options": {
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "setupTimeout"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "setupTimeout"
                    ]
                  }
                ]
              }
            }
          ]
        }
      ],
      "properties": {
        "k6Args": {
          "$ref": "#/$defs/.stroppy.K6Options.k6_args"
        },
        "setupTimeout": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.K6Options.setup_timeout"
            }
          ]
        },
        "scenario": {
          "$ref": "#/$defs/.stroppy.K6Options.scenario"
        }
      },
      "type": "object",
      "required": [
        "scenario"
      ],
      "description": "*\n K6Executor contains configuration for k6 load testing tool integration.\n It contains paths to the k6 binary and the k6 test script, as well as\n additional arguments to pass to the k6 binary."
    },
    ".stroppy.K6Options.k6_args": {
      "items": {
        "type": "string",
        "description": "* Additional arguments to pass to the k6 binary"
      },
      "type": "array",
      "description": "* Additional arguments to pass to the k6 binary"
    },
    ".stroppy.K6Options.scenario": {
      "$ref": "#/$defs/.stroppy.K6Scenario",
      "description": "* Scenario configuration"
    },
    ".stroppy.K6Options.setup_timeout": {
      "type": "string",
      "format": "duration",
      "description": "* Timeout for k6 setup phase"
    },
    ".stroppy.K6Scenario": {
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "sharedIterations"
              ]
            },
            {
              "required": [
                "perVuIterations"
              ]
            },
            {
              "required": [
                "constantVus"
              ]
            },
            {
              "required": [
                "rampingVus"
              ]
            },
            {
              "required": [
                "constantArrivalRate"
              ]
            },
            {
              "required": [
                "rampingArrivalRate"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "sharedIterations"
                    ]
                  },
                  {
                    "required": [
                      "perVuIterations"
                    ]
                  },
                  {
                    "required": [
                      "constantVus"
                    ]
                  },
                  {
                    "required": [
                      "rampingVus"
                    ]
                  },
                  {
                    "required": [
                      "constantArrivalRate"
                    ]
                  },
                  {
                    "required": [
                      "rampingArrivalRate"
                    ]
                  }
                ]
              }
            }
          ]
        }
      ],
      "properties": {
        "maxDuration": {
          "$ref": "#/$defs/.stroppy.K6Scenario.max_duration"
        },
        "sharedIterations": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.K6Scenario.shared_iterations"
            }
          ]
        },
        "perVuIterations": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.K6Scenario.per_vu_iterations"
            }
          ]
        },
        "constantVus": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.K6Scenario.constant_vus"
            }
          ]
        },
        "rampingVus": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.K6Scenario.ramping_vus"
            }
          ]
        },
        "constantArrivalRate": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.K6Scenario.constant_arrival_rate"
            }
          ]
        },
        "rampingArrivalRate": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.K6Scenario.ramping_arrival_rate"
            }
          ]
        }
      },
      "type": "object",
      "required": [
        "maxDuration"
      ],
      "description": "*\n Scenario defines the overall test scenario configuration.\n It contains user tags, maximum duration, and executor configuration.\n Documentation: https://grafana.com/docs/k6/latest/using-k6/scenarios/"
    },
    ".stroppy.K6Scenario.constant_arrival_rate": {
      "$ref": "#/$defs/.stroppy.ConstantArrivalRate",
      "description": "* Constant arrival rate executor"
    },
    ".stroppy.K6Scenario.constant_vus": {
      "$ref": "#/$defs/.stroppy.ConstantVUs",
      "description": "* Constant VUs executor"
    },
    ".stroppy.K6Scenario.max_duration": {
      "type": "string",
      "format": "duration",
      "description": "* Maximum duration for scenario execution.\n Used as a time limiter if main parameters (iterations, stages, duration) \n do not complete in time."
    },
    ".stroppy.K6Scenario.per_vu_iterations": {
      "$ref": "#/$defs/.stroppy.PerVuIterations",
      "description": "* Per-VU iterations executor"
    },
    ".stroppy.K6Scenario.ramping_arrival_rate": {
      "$ref": "#/$defs/.stroppy.RampingArrivalRate",
      "description": "* Ramping arrival rate executor"
    },
    ".stroppy.K6Scenario.ramping_vus": {
      "$ref": "#/$defs/.stroppy.RampingVUs",
      "description": "* Ramping VUs executor"
    },
    ".stroppy.K6Scenario.shared_iterations": {
      "$ref": "#/$defs/.stroppy.SharedIterations",
      "description": "* Shared iterations executor"
    },
    ".stroppy.LoggerConfig": {
      "properties": {
        "logLevel": {
          "$ref": "#/$defs/.stroppy.LoggerConfig.log_level"
        },
        "logMode": {
          "$ref": "#/$defs/.stroppy.LoggerConfig.log_mode"
        }
      },
      "type": "object",
      "required": [
        "logLevel",
        "logMode"
      ],
      "description": "*\n LoggerConfig contains configuration for the logging system.\n It controls log levels and output formatting."
    },
    ".stroppy.LoggerConfig.LogLevel": {
      "type": "string",
      "enum": [
        "LOG_LEVEL_DEBUG",
        "LOG_LEVEL_INFO",
        "LOG_LEVEL_WARN",
        "LOG_LEVEL_ERROR",
        "LOG_LEVEL_FATAL"
      ]
    },
    ".stroppy.LoggerConfig.LogMode": {
      "type": "string",
      "enum": [
        "LOG_MODE_DEVELOPMENT",
        "LOG_MODE_PRODUCTION"
      ]
    },
    ".stroppy.LoggerConfig.log_level": {
      "$ref": "#/$defs/.stroppy.LoggerConfig.LogLevel",
      "description": "* Minimum log level to output"
    },
    ".stroppy.LoggerConfig.log_mode": {
      "$ref": "#/$defs/.stroppy.LoggerConfig.LogMode",
      "description": "* Logging mode (development or production)"
    },
    ".stroppy.OtlpExport": {
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "otlpGrpcEndpoint"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "otlpGrpcEndpoint"
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "oneOf": [
            {
              "required": [
                "otlpHttpEndpoint"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "otlpHttpEndpoint"
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "oneOf": [
            {
              "required": [
                "otlpHttpExporterUrlPath"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "otlpHttpExporterUrlPath"
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "oneOf": [
            {
              "required": [
                "otlpEndpointInsecure"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "otlpEndpointInsecure"
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "oneOf": [
            {
              "required": [
                "otlpHeaders"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "otlpHeaders"
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "oneOf": [
            {
              "required": [
                "otlpMetricsPrefix"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "otlpMetricsPrefix"
                    ]
                  }
                ]
              }
            }
          ]
        }
      ],
      "properties": {
        "otlpGrpcEndpoint": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.OtlpExport.otlp_grpc_endpoint"
            }
          ]
        },
        "otlpHttpEndpoint": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.OtlpExport.otlp_http_endpoint"
            }
          ]
        },
        "otlpHttpExporterUrlPath": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.OtlpExport.otlp_http_exporter_url_path"
            }
          ]
        },
        "otlpEndpointInsecure": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.OtlpExport.otlp_endpoint_insecure"
            }
          ]
        },
        "otlpHeaders": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.OtlpExport.otlp_headers"
            }
          ]
        },
        "otlpMetricsPrefix": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.OtlpExport.otlp_metrics_prefix"
            }
          ]
        }
      },
      "type": "object",
      "description": "*\n OtlpExport contains configuration for exporting metrics via OpenTelemetry Protocol (OTLP).\n It specifies the endpoint and metrics prefix for telemetry data export."
    },
    ".stroppy.OtlpExport.otlp_endpoint_insecure": {
      "type": "boolean",
      "description": "* Disable transport security for the exporter"
    },
    ".stroppy.OtlpExport.otlp_grpc_endpoint": {
      "type": "string",
      "description": "* gRPC endpoint for OpenTelemetry collector"
    },
    ".stroppy.OtlpExport.otlp_headers": {
      "type": "string",
      "description": "* Headers for otlp requests e.g. Authorization=..."
    },
    ".stroppy.OtlpExport.otlp_http_endpoint": {
      "type": "string",
      "description": "* HTTP endpoint for the OpenTelemetry collector"
    },
    ".stroppy.OtlpExport.otlp_http_exporter_url_path": {
      "type": "string",
      "description": "* HTTP exporter path. Default is '/v1/metrics'"
    },
    ".stroppy.OtlpExport.otlp_metrics_prefix": {
      "type": "string",
      "description": "* Prefix to be added to all exported metrics"
    },
    ".stroppy.PerVuIterations": {
      "properties": {
        "vus": {
          "$ref": "#/$defs/.stroppy.PerVuIterations.vus"
        },
        "iterations": {
          "$ref": "#/$defs/.stroppy.PerVuIterations.iterations"
        }
      },
      "type": "object",
      "required": [
        "vus",
        "iterations"
      ],
      "description": "*\n PerVuIterations executor configuration.\n Documentation: https://grafana.com/docs/k6/latest/using-k6/scenarios/executors/per-vu-iterations/"
    },
    ".stroppy.PerVuIterations.iterations": {
      "type": "string",
      "format": "int64",
      "description": "* Number of iterations that each VU should execute"
    },
    ".stroppy.PerVuIterations.vus": {
      "type": "integer",
      "description": "* Number of virtual users"
    },
    ".stroppy.QueryDescriptor": {
      "properties": {
        "name": {
          "$ref": "#/$defs/.stroppy.QueryDescriptor.name"
        },
        "sql": {
          "$ref": "#/$defs/.stroppy.QueryDescriptor.sql"
        },
        "params": {
          "$ref": "#/$defs/.stroppy.QueryDescriptor.params"
        },
        "dbSpecific": {
          "$ref": "#/$defs/.stroppy.QueryDescriptor.db_specific"
        }
      },
      "type": "object",
      "required": [
        "name",
        "sql",
        "dbSpecific"
      ],
      "description": "*\n QueryDescriptor defines a database query with its parameters and execution\n count."
    },
    ".stroppy.QueryDescriptor.db_specific": {
      "$ref": "#/$defs/.stroppy.Value.Struct",
      "description": "* Database-specific query properties"
    },
    ".stroppy.QueryDescriptor.name": {
      "type": "string",
      "description": "* Name of the query"
    },
    ".stroppy.QueryDescriptor.params": {
      "items": {
        "$ref": "#/$defs/.stroppy.QueryParamDescriptor",
        "description": "* Parameters used in the query"
      },
      "type": "array",
      "description": "* Parameters used in the query"
    },
    ".stroppy.QueryDescriptor.sql": {
      "type": "string",
      "description": "* SQL query text"
    },
    ".stroppy.QueryParamDescriptor": {
      "properties": {
        "name": {
          "$ref": "#/$defs/.stroppy.QueryParamDescriptor.name"
        },
        "replaceRegex": {
          "$ref": "#/$defs/.stroppy.QueryParamDescriptor.replace_regex"
        },
        "generationRule": {
          "$ref": "#/$defs/.stroppy.QueryParamDescriptor.generation_rule"
        },
        "dbSpecific": {
          "$ref": "#/$defs/.stroppy.QueryParamDescriptor.db_specific"
        }
      },
      "type": "object",
      "required": [
        "name",
        "replaceRegex",
        "generationRule",
        "dbSpecific"
      ],
      "description": "*\n QueryParamDescriptor defines a parameter that can be used in a query."
    },
    ".stroppy.QueryParamDescriptor.db_specific": {
      "$ref": "#/$defs/.stroppy.Value.Struct",
      "description": "* Database-specific parameter properties"
    },
    ".stroppy.QueryParamDescriptor.generation_rule": {
      "$ref": "#/$defs/.stroppy.Generation.Rule",
      "description": "* Rule for generating parameter values"
    },
    ".stroppy.QueryParamDescriptor.name": {
      "type": "string",
      "description": "* Name of the parameter"
    },
    ".stroppy.QueryParamDescriptor.replace_regex": {
      "type": "string",
      "description": "* Regular expression pattern to replace with the parameter value default\n is \"${\u003cparam_name\u003e}\""
    },
    ".stroppy.RampingArrivalRate": {
      "properties": {
        "startRate": {
          "$ref": "#/$defs/.stroppy.RampingArrivalRate.start_rate"
        },
        "timeUnit": {
          "$ref": "#/$defs/.stroppy.RampingArrivalRate.time_unit"
        },
        "stages": {
          "$ref": "#/$defs/.stroppy.RampingArrivalRate.stages"
        },
        "preAllocatedVus": {
          "$ref": "#/$defs/.stroppy.RampingArrivalRate.pre_allocated_vus"
        },
        "maxVus": {
          "$ref": "#/$defs/.stroppy.RampingArrivalRate.max_vus"
        }
      },
      "type": "object",
      "required": [
        "startRate",
        "timeUnit",
        "preAllocatedVus",
        "maxVus"
      ],
      "description": "*\n RampingArrivalRate executor configuration.\n Documentation: https://grafana.com/docs/k6/latest/using-k6/scenarios/executors/ramping-arrival-rate/"
    },
    ".stroppy.RampingArrivalRate.RateStage": {
      "properties": {
        "target": {
          "$ref": "#/$defs/.stroppy.RampingArrivalRate.RateStage.target"
        },
        "duration": {
          "$ref": "#/$defs/.stroppy.RampingArrivalRate.RateStage.duration"
        }
      },
      "type": "object",
      "required": [
        "target",
        "duration"
      ],
      "description": "* Rate stage configuration for ramping arrival rate"
    },
    ".stroppy.RampingArrivalRate.RateStage.duration": {
      "type": "string",
      "format": "duration",
      "description": "* Duration of the stage"
    },
    ".stroppy.RampingArrivalRate.RateStage.target": {
      "type": "integer",
      "description": "* Target rate (iterations per time_unit) at the end of the stage"
    },
    ".stroppy.RampingArrivalRate.max_vus": {
      "type": "integer",
      "description": "* Maximum number of VUs available for pool expansion"
    },
    ".stroppy.RampingArrivalRate.pre_allocated_vus": {
      "type": "integer",
      "description": "* Number of VUs allocated in advance"
    },
    ".stroppy.RampingArrivalRate.stages": {
      "items": {
        "$ref": "#/$defs/.stroppy.RampingArrivalRate.RateStage",
        "description": "* List of rate change stages"
      },
      "type": "array",
      "description": "* List of rate change stages"
    },
    ".stroppy.RampingArrivalRate.start_rate": {
      "type": "integer",
      "description": "* Initial rate (iterations per time_unit)"
    },
    ".stroppy.RampingArrivalRate.time_unit": {
      "type": "string",
      "format": "duration",
      "description": "* Time unit for the rate (e.g., \"1s\")"
    },
    ".stroppy.RampingVUs": {
      "properties": {
        "startVus": {
          "$ref": "#/$defs/.stroppy.RampingVUs.start_vus"
        },
        "stages": {
          "$ref": "#/$defs/.stroppy.RampingVUs.stages"
        },
        "preAllocatedVus": {
          "$ref": "#/$defs/.stroppy.RampingVUs.pre_allocated_vus"
        },
        "maxVus": {
          "$ref": "#/$defs/.stroppy.RampingVUs.max_vus"
        }
      },
      "type": "object",
      "required": [
        "startVus",
        "preAllocatedVus",
        "maxVus"
      ],
      "description": "*\n RampingVUs executor configuration.\n Documentation: https://grafana.com/docs/k6/latest/using-k6/scenarios/executors/ramping-vus/"
    },
    ".stroppy.RampingVUs.VUStage": {
      "properties": {
        "duration": {
          "$ref": "#/$defs/.stroppy.RampingVUs.VUStage.duration"
        },
        "target": {
          "$ref": "#/$defs/.stroppy.RampingVUs.VUStage.target"
        }
      },
      "type": "object",
      "required": [
        "duration",
        "target"
      ],
      "description": "* VU stage configuration for ramping"
    },
    ".stroppy.RampingVUs.VUStage.duration": {
      "type": "string",
      "format": "duration",
      "description": "* Duration of the stage (e.g., \"30s\")"
    },
    ".stroppy.RampingVUs.VUStage.target": {
      "type": "integer",
      "description": "* Target number of VUs at the end of the stage"
    },
    ".stroppy.RampingVUs.max_vus": {
      "type": "integer",
      "description": "* Maximum number of VUs available for pool expansion"
    },
    ".stroppy.RampingVUs.pre_allocated_vus": {
      "type": "integer",
      "description": "* Number of VUs allocated in advance.\n Helps avoid delays when creating new VUs during the test."
    },
    ".stroppy.RampingVUs.stages": {
      "items": {
        "$ref": "#/$defs/.stroppy.RampingVUs.VUStage",
        "description": "* List of stages where VU count changes to target value over specified time"
      },
      "type": "array",
      "description": "* List of stages where VU count changes to target value over specified time"
    },
    ".stroppy.RampingVUs.start_vus": {
      "type": "integer",
      "description": "* Initial number of virtual users"
    },
    ".stroppy.SharedIterations": {
      "properties": {
        "iterations": {
          "$ref": "#/$defs/.stroppy.SharedIterations.iterations"
        },
        "vus": {
          "$ref": "#/$defs/.stroppy.SharedIterations.vus"
        }
      },
      "type": "object",
      "required": [
        "iterations",
        "vus"
      ],
      "description": "*\n SharedIterations executor configuration.\n Documentation: https://grafana.com/docs/k6/latest/using-k6/scenarios/executors/shared-iterations/"
    },
    ".stroppy.SharedIterations.iterations": {
      "type": "string",
      "format": "int64",
      "description": "* Total number of iterations to be executed by all VUs together.\n Iterations are distributed dynamically among available VUs."
    },
    ".stroppy.SharedIterations.vus": {
      "type": "integer",
      "description": "* Number of virtual users that will execute these iterations in parallel"
    },
    ".stroppy.SideCarConfig": {
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "settings"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "settings"
                    ]
                  }
                ]
              }
            }
          ]
        }
      ],
      "properties": {
        "url": {
          "$ref": "#/$defs/.stroppy.SideCarConfig.url"
        },
        "settings": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.SideCarConfig.settings"
            }
          ]
        }
      },
      "type": "object",
      "required": [
        "url"
      ],
      "description": "*\n SideCar contains configuration for plugins."
    },
    ".stroppy.SideCarConfig.settings": {
      "$ref": "#/$defs/.stroppy.Value.Struct",
      "description": "* Additional plugin settings"
    },
    ".stroppy.SideCarConfig.url": {
      "type": "string",
      "description": "* Url to connect the plugin instance"
    },
    ".stroppy.Step": {
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "exporter"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "exporter"
                    ]
                  }
                ]
              }
            }
          ]
        }
      ],
      "properties": {
        "name": {
          "$ref": "#/$defs/.stroppy.Step.name"
        },
        "workload": {
          "$ref": "#/$defs/.stroppy.Step.workload"
        },
        "executor": {
          "$ref": "#/$defs/.stroppy.Step.executor"
        },
        "exporter": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Step.exporter"
            }
          ]
        }
      },
      "type": "object",
      "required": [
        "name",
        "workload",
        "executor"
      ],
      "description": "*\n StepExecutorMappingConfig contains configuration for mapping steps to executors."
    },
    ".stroppy.Step.executor": {
      "type": "string",
      "description": "* Name of the executor"
    },
    ".stroppy.Step.exporter": {
      "type": "string",
      "description": "* Name of the exporter"
    },
    ".stroppy.Step.name": {
      "type": "string",
      "description": "* Name of the step"
    },
    ".stroppy.Step.workload": {
      "type": "string",
      "description": "* Name of the step"
    },
    ".stroppy.TableDescriptor": {
      "properties": {
        "name": {
          "$ref": "#/$defs/.stroppy.TableDescriptor.name"
        },
        "tableIndexes": {
          "$ref": "#/$defs/.stroppy.TableDescriptor.table_indexes"
        },
        "constraint": {
          "$ref": "#/$defs/.stroppy.TableDescriptor.constraint"
        },
        "dbSpecific": {
          "$ref": "#/$defs/.stroppy.TableDescriptor.db_specific"
        },
        "columns": {
          "$ref": "#/$defs/.stroppy.TableDescriptor.columns"
        }
      },
      "type": "object",
      "required": [
        "name",
        "constraint",
        "dbSpecific"
      ],
      "description": "*\n TableDescriptor defines the structure of a database table."
    },
    ".stroppy.TableDescriptor.columns": {
      "items": {
        "$ref": "#/$defs/.stroppy.ColumnDescriptor",
        "description": "* Columns defined in this table"
      },
      "type": "array",
      "description": "* Columns defined in this table"
    },
    ".stroppy.TableDescriptor.constraint": {
      "type": "string",
      "description": "* Table-level constraints"
    },
    ".stroppy.TableDescriptor.db_specific": {
      "$ref": "#/$defs/.stroppy.Value.Struct",
      "description": "* Database-specific table properties"
    },
    ".stroppy.TableDescriptor.name": {
      "type": "string",
      "description": "* Name of the table"
    },
    ".stroppy.TableDescriptor.table_indexes": {
      "items": {
        "$ref": "#/$defs/.stroppy.IndexDescriptor",
        "description": "* List of indexes defined on this table"
      },
      "type": "array",
      "description": "* List of indexes defined on this table"
    },
    ".stroppy.TransactionDescriptor": {
      "properties": {
        "name": {
          "$ref": "#/$defs/.stroppy.TransactionDescriptor.name"
        },
        "isolationLevel": {
          "$ref": "#/$defs/.stroppy.TransactionDescriptor.isolation_level"
        },
        "queries": {
          "$ref": "#/$defs/.stroppy.TransactionDescriptor.queries"
        },
        "dbSpecific": {
          "$ref": "#/$defs/.stroppy.TransactionDescriptor.db_specific"
        }
      },
      "type": "object",
      "required": [
        "name",
        "isolationLevel",
        "dbSpecific"
      ],
      "description": "*\n TransactionDescriptor defines a database transaction with its queries and\n execution count."
    },
    ".stroppy.TransactionDescriptor.db_specific": {
      "$ref": "#/$defs/.stroppy.Value.Struct",
      "description": "* Database-specific transaction properties"
    },
    ".stroppy.TransactionDescriptor.isolation_level": {
      "$ref": "#/$defs/.stroppy.TxIsolationLevel",
      "description": "* Transaction isolation level"
    },
    ".stroppy.TransactionDescriptor.name": {
      "type": "string",
      "description": "* Name of the transaction"
    },
    ".stroppy.TransactionDescriptor.queries": {
      "items": {
        "$ref": "#/$defs/.stroppy.QueryDescriptor",
        "description": "* List of queries to execute in this transaction"
      },
      "type": "array",
      "description": "* List of queries to execute in this transaction"
    },
    ".stroppy.TxIsolationLevel": {
      "type": "string",
      "enum": [
        "TX_ISOLATION_LEVEL_UNSPECIFIED",
        "TX_ISOLATION_LEVEL_READ_UNCOMMITTED",
        "TX_ISOLATION_LEVEL_READ_COMMITTED",
        "TX_ISOLATION_LEVEL_REPEATABLE_READ",
        "TX_ISOLATION_LEVEL_SERIALIZABLE"
      ],
      "description": "*\n TransactionIsolationLevel defines the isolation level for a database\n transaction."
    },
    ".stroppy.UnitDescriptor": {
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "createTable"
              ]
            },
            {
              "required": [
                "query"
              ]
            },
            {
              "required": [
                "transaction"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "createTable"
                    ]
                  },
                  {
                    "required": [
                      "query"
                    ]
                  },
                  {
                    "required": [
                      "transaction"
                    ]
                  }
                ]
              }
            }
          ]
        }
      ],
      "properties": {
        "createTable": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.UnitDescriptor.create_table"
            }
          ]
        },
        "query": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.UnitDescriptor.query"
            }
          ]
        },
        "transaction": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.UnitDescriptor.transaction"
            }
          ]
        }
      },
      "type": "object",
      "description": "*\n UnitDescriptor represents a single workload.\n It can be a table creation operation, a query execution operation, or a\n transaction execution operation."
    },
    ".stroppy.UnitDescriptor.create_table": {
      "$ref": "#/$defs/.stroppy.TableDescriptor",
      "description": "* Table creation operation"
    },
    ".stroppy.UnitDescriptor.query": {
      "$ref": "#/$defs/.stroppy.QueryDescriptor",
      "description": "* Query execution operation"
    },
    ".stroppy.UnitDescriptor.transaction": {
      "$ref": "#/$defs/.stroppy.TransactionDescriptor",
      "description": "* Transaction execution operation"
    },
    ".stroppy.Uuid": {
      "properties": {
        "value": {
          "$ref": "#/$defs/.stroppy.Uuid.value"
        }
      },
      "type": "object",
      "required": [
        "value"
      ],
      "description": "*\n Uuid represents a universally unique identifier (UUID)."
    },
    ".stroppy.Uuid.value": {
      "type": "string",
      "description": "* String representation of UUID (e.g., \"123e4567-e89b-12d3-a456-426614174000\")"
    },
    ".stroppy.Value": {
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "null"
              ]
            },
            {
              "required": [
                "int32"
              ]
            },
            {
              "required": [
                "uint32"
              ]
            },
            {
              "required": [
                "int64"
              ]
            },
            {
              "required": [
                "uint64"
              ]
            },
            {
              "required": [
                "float"
              ]
            },
            {
              "required": [
                "double"
              ]
            },
            {
              "required": [
                "string"
              ]
            },
            {
              "required": [
                "bool"
              ]
            },
            {
              "required": [
                "decimal"
              ]
            },
            {
              "required": [
                "uuid"
              ]
            },
            {
              "required": [
                "datetime"
              ]
            },
            {
              "required": [
                "struct"
              ]
            },
            {
              "required": [
                "list"
              ]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "null"
                    ]
                  },
                  {
                    "required": [
                      "int32"
                    ]
                  },
                  {
                    "required": [
                      "uint32"
                    ]
                  },
                  {
                    "required": [
                      "int64"
                    ]
                  },
                  {
                    "required": [
                      "uint64"
                    ]
                  },
                  {
                    "required": [
                      "float"
                    ]
                  },
                  {
                    "required": [
                      "double"
                    ]
                  },
                  {
                    "required": [
                      "string"
                    ]
                  },
                  {
                    "required": [
                      "bool"
                    ]
                  },
                  {
                    "required": [
                      "decimal"
                    ]
                  },
                  {
                    "required": [
                      "uuid"
                    ]
                  },
                  {
                    "required": [
                      "datetime"
                    ]
                  },
                  {
                    "required": [
                      "struct"
                    ]
                  },
                  {
                    "required": [
                      "list"
                    ]
                  }
                ]
              }
            }
          ]
        }
      ],
      "properties": {
        "null": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Value.null"
            }
          ]
        },
        "int32": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Value.int32"
            }
          ]
        },
        "uint32": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Value.uint32"
            }
          ]
        },
        "int64": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Value.int64"
            }
          ]
        },
        "uint64": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Value.uint64"
            }
          ]
        },
        "float": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Value.float"
            }
          ]
        },
        "double": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Value.double"
            }
          ]
        },
        "string": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Value.string"
            }
          ]
        },
        "bool": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Value.bool"
            }
          ]
        },
        "decimal": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Value.decimal"
            }
          ]
        },
        "uuid": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Value.uuid"
            }
          ]
        },
        "datetime": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Value.datetime"
            }
          ]
        },
        "struct": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Value.struct"
            }
          ]
        },
        "list": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/$defs/.stroppy.Value.list"
            }
          ]
        },
        "key": {
          "$ref": "#/$defs/.stroppy.Value.key"
        }
      },
      "type": "object",
      "required": [
        "key"
      ],
      "description": "*\n Value is a variant type that can represent different types of values.\n It's used to represent values that can be of multiple types in a type-safe way."
    },
    ".stroppy.Value.List": {
      "properties": {
        "values": {
          "$ref": "#/$defs/.stroppy.Value.List.values"
        }
      },
      "type": "object"
    },
    ".stroppy.Value.List.values": {
      "items": {
        "$ref": "#/$defs/.stroppy.Value",
        "description": "* List of values"
      },
      "type": "array",
      "description": "* List of values"
    },
    ".stroppy.Value.NullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ]
    },
    ".stroppy.Value.Struct": {
      "properties": {
        "fields": {
          "$ref": "#/$defs/.stroppy.Value.Struct.fields"
        }
      },
      "type": "object"
    },
    ".stroppy.Value.Struct.fields": {
      "items": {
        "$ref": "#/$defs/.stroppy.Value",
        "description": "* Map of field names to values"
      },
      "type": "array",
      "description": "* Map of field names to values"
    },
    ".stroppy.Value.bool": {
      "type": "boolean",
      "description": "* Boolean value"
    },
    ".stroppy.Value.datetime": {
      "$ref": "#/$defs/.stroppy.DateTime",
      "description": "* Date and time"
    },
    ".stroppy.Value.decimal": {
      "$ref": "#/$defs/.stroppy.Decimal",
      "description": "* Arbitrary-precision decimal"
    },
    ".stroppy.Value.double": {
      "type": "number",
      "description": "* 64-bit floating point number"
    },
    ".stroppy.Value.float": {
      "type": "number",
      "description": "* 32-bit floating point number"
    },
    ".stroppy.Value.int32": {
      "type": "integer",
      "description": "* 32-bit signed integer"
    },
    ".stroppy.Value.int64": {
      "type": "string",
      "format": "int64",
      "description": "* 64-bit signed integer"
    },
    ".stroppy.Value.key": {
      "type": "string",
      "description": "* Field name (used in structs)"
    },
    ".stroppy.Value.list": {
      "$ref": "#/$defs/.stroppy.Value.List",
      "description": "* List of values"
    },
    ".stroppy.Value.null": {
      "$ref": "#/$defs/.stroppy.Value.NullValue",
      "description": "* Null value"
    },
    ".stroppy.Value.string": {
      "type": "string",
      "description": "* UTF-8 encoded string"
    },
    ".stroppy.Value.struct": {
      "$ref": "#/$defs/.stroppy.Value.Struct",
      "description": "* Nested structure"
    },
    ".stroppy.Value.uint32": {
      "type": "integer",
      "description": "* 32-bit unsigned integer"
    },
    ".stroppy.Value.uint64": {
      "type": "string",
      "format": "int64",
      "description": "* 64-bit unsigned integer"
    },
    ".stroppy.Value.uuid": {
      "$ref": "#/$defs/.stroppy.Uuid",
      "description": "* Universally unique identifier"
    },
    ".stroppy.WorkloadDescriptor": {
      "properties": {
        "name": {
          "$ref": "#/$defs/.stroppy.WorkloadDescriptor.name"
        },
        "async": {
          "$ref": "#/$defs/.stroppy.WorkloadDescriptor.async"
        },
        "units": {
          "$ref": "#/$defs/.stroppy.WorkloadDescriptor.units"
        }
      },
      "type": "object",
      "required": [
        "name",
        "async"
      ],
      "description": "*\n WorkloadDescriptor represents a logical step in a benchmark.\n It contains a list of operations to perform in this step."
    },
    ".stroppy.WorkloadDescriptor.async": {
      "type": "boolean",
      "description": "* Whether to execute all operations in this workload asynchronously"
    },
    ".stroppy.WorkloadDescriptor.name": {
      "type": "string",
      "description": "* Name of the step"
    },
    ".stroppy.WorkloadDescriptor.units": {
      "items": {
        "$ref": "#/$defs/.stroppy.WorkloadUnitDescriptor",
        "description": "* List of operations to perform in this step"
      },
      "type": "array",
      "description": "* List of operations to perform in this step"
    },
    ".stroppy.WorkloadUnitDescriptor": {
      "properties": {
        "descriptor": {
          "$ref": "#/$defs/.stroppy.WorkloadUnitDescriptor.descriptor"
        },
        "count": {
          "$ref": "#/$defs/.stroppy.WorkloadUnitDescriptor.count"
        }
      },
      "type": "object",
      "required": [
        "descriptor",
        "count"
      ],
      "description": "*\n WorkloadUnitDescriptor represents a single unit of work.\n It can be a table creation operation, a query execution operation, or a\n transaction execution operation."
    },
    ".stroppy.WorkloadUnitDescriptor.count": {
      "type": "string",
      "format": "int64",
      "description": "* Number of times to execute this unit"
    },
    ".stroppy.WorkloadUnitDescriptor.descriptor": {
      "$ref": "#/$defs/.stroppy.UnitDescriptor"
    }
  },
  "type": "object"
}